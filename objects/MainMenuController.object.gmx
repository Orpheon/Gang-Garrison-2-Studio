<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>MenuController</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    global.levelchoice = 1
    menu_create(40, 300, 200, 200, 32);
    
    menu_background(208, 24, 8, 12, 4);
    
    menu_addlink("Host Game", 'MainMenuHostGameCallback');
    menu_addlink("Join (lobby)", 'MainMenuJoinGameCallback');
    menu_addlink("Join (manual)", 'MainMenuJoinManualCallback');
    menu_addlink("Garrison Builder", 'MainMenuGarrisonBuilderCallback');
    menu_addlink("Options", 'MainMenuOptionsCallback');
    if (global.rewardId != '')
    {
        menu_addlink("Manage Haxxy Rewards", 'MainMenuHaxxyAwardsCallback');
    }
    menu_addlink("Credits", 'MainMenuCreditsCallback');
    menu_addlink("Visit The Forums",'MainMenuForumsCallback');
    menu_addback("Quit", 'MainMenuQuitCallback');

    // Music setting set to "Menu Only" or "Menu and In-Game"
    if (!sound_isplaying(global.MenuMusic)
        &amp;&amp; (global.music == MUSIC_MENU_ONLY || global.music == MUSIC_BOTH))
    {
        AudioControlPlaySong(global.MenuMusic);
    }

    fade = 0;
    
    // ini says we have a downloaded background
    if (global.backgroundHash != "default")
    {
        var validBackground;
        validBackground = false;

        // already loaded background in a previous instance
        if (variable_global_exists("downloadedBackground"))
        {
            menuimage = global.downloadedBackground;
            validBackground = true;
        }
        // haven't loaded yet, background exists
        else if (file_exists("background.png"))
        {
            // passes integrity check
            if (global.backgroundHash == GG2DLL_compute_MD5("background.png"))
            {
                // use downloaded background
                global.downloadedBackground = background_add("background.png", false, false);
                menuimage = global.downloadedBackground;
                validBackground = true;
            }
        }
        // otherwise, reset values
        if (!validBackground)
        {
            global.backgroundHash = "default";
            global.backgroundTitle = "";
            global.backgroundURL = "";
            global.backgroundShowVersion = true;
            ini_open("gg2.ini");
            ini_write_string("Background", "BackgroundHash", global.backgroundHash);
            ini_write_string("Background", "BackgroundTitle", global.backgroundTitle);
            ini_write_string("Background", "BackgroundURL", global.backgroundURL);
            ini_write_real("Background", "BackgroundShowVersion", global.backgroundShowVersion);
            ini_close();
        }
    }

    // use default background if ini says we should
    if (global.backgroundHash == "default")
        menuimage = global.defaultBackground;

    if(global.dedicatedMode == 1)
        event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fade -= 1/90 * global.delta_factor;
if (fade &lt; 0)
{
    fade = 0;
}

if (global.backgroundHash != "default")
{
    // hovering over title
    if (mouse_x &gt;= 595 - string_width(global.backgroundTitle)
        &amp;&amp; mouse_x &lt; 595
        &amp;&amp; mouse_y &gt;= 595 - string_height(global.backgroundTitle)
        &amp;&amp; mouse_y &lt; 595
        &amp;&amp; global.backgroundURL != "")
    {
        // clicking
        if (mouse_check_button_pressed(mb_left))
        {
            mouse_clear(mb_left);
            url_open(global.backgroundURL);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.backgroundHash != "default")
{
    // Load new background image
    oldBackground = menuimage;
    menuimage = background_add("background.png", false, false);
    global.downloadedBackground = menuimage;

}
else
{
    // Reset to default background
    oldBackground = menuimage;
    menuimage = choose(MenuBackground1, MenuBackground2);
}
fade = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.isHost = true;
if(global.dedicatedMode == 0)
{
    with(DevMessageChecker)
        instance_destroy();
    with(DevMessagePopup)
        instance_destroy();
    instance_create(x,y,HostOptionsController);
    instance_destroy();
}
else {
    global.gameServer = instance_create(0,0,GameServer);    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    draw_background(menuimage, 0, 0);

    // display background info, if downloaded
    if (global.backgroundHash != "default")
    {
        draw_set_halign(fa_right);
        draw_set_valign(fa_bottom);
        
        // hovering over title
        if (mouse_x &gt;= 595 - string_width(global.backgroundTitle)
            &amp;&amp; mouse_x &lt; 595
            &amp;&amp; mouse_y &gt;= 595 - string_height(global.backgroundTitle)
            &amp;&amp; mouse_y &lt; 595
            &amp;&amp; global.backgroundURL != "")
        {
            draw_set_color(c_orange);
        }
        else
        {
            draw_set_color(c_white);
        }
        draw_text(595, 595, global.backgroundTitle);
    }

    // fade out old background
    if (fade &gt; 0)
    {
        draw_background_ext(oldBackground, 0, 0, 1, 1, 0, c_white, fade);
    }

    if (!(global.backgroundHash != "default" &amp;&amp; !global.backgroundShowVersion))
    {
        draw_sprite(MenuBackgroundVersionS,0,300,300);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
