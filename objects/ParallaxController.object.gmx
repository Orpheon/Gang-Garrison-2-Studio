<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-110000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>num_bgs = 0;
foreground = -1;
voidColor = c_black;

var i;
for(i=0; i&lt;7; i+=1)
{
    background_xfactor[i] = 10-i;
    background_yfactor[i] = 10-i;
}

event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (foreground != -1)
    background_delete(foreground);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (num_bgs == 0)
    exit;   // Nothing to do here

var i, xorigin, yorigin, xparallax, yparallax;
for (i = 0; i &lt; num_bgs; i += 1)
{
    // origin of parallax happens to be the same as the screen shift
    xorigin = view_xview + view_wview/2 - (background_width[i]*background_xscale[i])/2;
    yorigin = view_yview + view_hview/2 - (background_height[i]*background_yscale[i])/2;
    
    // amount of parallax
    if (background_xfactor[i] != 0)
        xparallax = 1/power(background_xfactor[i], 2) * xorigin;
    else
        xparallax = 0;
        
    if (background_yfactor[i] != 0)
        yparallax = 1/power(background_yfactor[i], 2) * yorigin;
    else 
        yparallax = 0;
        
    background_x[i] = xorigin - xparallax;
    background_y[i] = yorigin - yparallax;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Take multistage maps into account.
yCenter = map_height()/2;
if global.totalMapAreas &gt; 1 {
    if (global.currentMapArea &gt;= global.totalMapAreas)
        yCenter = global.area[global.totalMapAreas] + (map_height() - global.area[global.totalMapAreas]) / 2;
    else
        yCenter = global.area[global.currentMapArea] + (global.area[global.currentMapArea+1] - global.area[global.currentMapArea]) / 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (foreground &gt; 0)
    draw_background_ext(foreground, 0, 0 ,background_xscale[7], background_yscale[7], 0, c_white, 1);
    
// Draw map borders
draw_set_alpha(1);
draw_set_color(voidColor);

if (view_yview[0] &lt; 0)
    draw_rectangle(view_xview[0], view_yview[0], view_xview[0]+view_wview[0], 0, false);
if (view_yview[0]+view_hview[0] &gt; map_height())
    draw_rectangle(view_xview[0], view_yview[0]+view_hview[], view_xview[0]+view_wview[0], map_height(), false);
if (view_xview[0] &lt; 0)
    draw_rectangle(view_xview[0], view_yview[0], 0, view_yview[0]+view_hview[0], false);
if (view_xview[0]+view_wview[0] &gt; map_width())
    draw_rectangle(view_xview[0]+view_wview[0], view_yview[0], map_width(), view_yview[0]+view_hview[0], false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
