<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>MenuController</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu_create(48, 172, 500, 260, 32, 40, 112, 128);
menumode = true;

menu_background(512, 24, 8, 12, 4);
bgtabs = true;

menu_addedit_num("Hosting Port:", "global.hostingPort", '
    gg2_write_ini("Settings", "HostingPort", argument0);
', 65535);

menu_addedit_script("Map Rotation:", menu_format_maprotation_filepath(global.mapRotationFile), '
    var absPath;

    absPath = get_open_filename("Map Rotation|*.txt", "");

    if (absPath == "") {
        global.mapRotationFile = absPath;
    } else {
        global.mapRotationFile = getRelativePathIfDescendand(working_directory + "\", absPath);
    }
    
    gg2_write_ini("Server", "MapRotation", global.mapRotationFile);
    
    load_map_rotation();
    return menu_format_maprotation_filepath(global.mapRotationFile);
');

menu_addedit_select("Shuffle map rotation:", "global.shuffleRotation", '
    gg2_write_ini("Server", "ShuffleRotation", argument0);
');
menu_add_option(0, "Don't shuffle");
menu_add_option(1, "Shuffle (no arena initial map)");
menu_add_option(2, "Shuffle without bias");

menu_addedit_boolean("Auto Balance:", "global.autobalance", '
    gg2_write_ini("Server", "AutoBalance", argument0);
');
menu_addedit_boolean("Announce to Lobby:", "global.useLobbyServer", '
    gg2_write_ini("Settings", "UseLobby", argument0);
');
menu_addedit_boolean("Attempt UPnP Forwarding:", "global.attemptPortForward", '
    if (argument0 == 1)
        show_message("Warning: UPNP support is currently experimental and enabling it may cause freezing while starting a server, but should cause no freezing ingame")
    gg2_write_ini("Server", "Attempt UPnP Forwarding", argument0);
');

menu_addlink("Start Game", '
    start_server();
');

menu_addtablink("Main", '
    instance_create(x,y,HostOptionsController);
    instance_destroy();
');
menu_addtablink("Advanced", '
    instance_create(x,y,AdvHostOptionsController);
    instance_destroy();
');
menu_addtablink("Classlimits", '
    instance_create(x,y,ClasslimitsMenuController);
    instance_destroy();
');

menu_addback("Back", '
    instance_create(x,y,MainMenuController);
    instance_destroy();
');
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(HostWarningsController)
    instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!instance_exists(HostWarningsController))
    instance_create(0, 0, HostWarningsController);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
