<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>entityButtonSize = 28;
buttonWidth = 115;
headerWidth = 122;
buttonHeight = 17;
buttonSpriteWidth = 17;

vItems = 5; // entity menu (rowsize)
entityButtonCount = 0;
items = 5;  // button menu default
oldItems = items;
height = items*buttonHeight;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xOffset, yOffset;

//********** ENITITY MENU  **********\\
xOffset = view_xview[0] + startX;
yOffset = view_yview[0] + startY;

draw_sprite_ext(gbMenuLayoutS, 0, xOffset, yOffset, 1, 1, 0, c_white, 1);
draw_sprite_ext(gbMenuLayoutS, 1, xOffset+buttonSpriteWidth, yOffset, entityButtonSize*vItems/(buttonSpriteWidth-1)-2, 1, 0, c_white, 1);
draw_sprite_ext(gbMenuLayoutS, 2, xOffset-buttonSpriteWidth+entityButtonSize*vItems+1, yOffset, 1, 1, 0, c_white, 1);

// Background
draw_set_color(make_color_rgb(159, 159, 159));
draw_rectangle(xOffset, yOffset+buttonHeight, xOffset+vItems*entityButtonSize, yOffset+buttonHeight+ceil(entityButtonCount/vItems)*entityButtonSize, false);
draw_set_color(make_color_rgb(63, 63, 63));
draw_rectangle(xOffset, yOffset+buttonHeight, xOffset+vItems*entityButtonSize, yOffset+buttonHeight+ceil(entityButtonCount/vItems)*entityButtonSize, true);

// Buttons
for(j=0; j&lt;entityButtonCount/vItems; j+=1) {
    for(i=0; i&lt;vItems &amp;&amp; j*vItems + i &lt; entityButtonCount; i+=1) {
        draw_sprite(entityButtons[j*vItems+i, SPRITE], entityButtons[j*vItems+i, IMAGE] + (selected != j*vItems+i), xOffset+i*entityButtonSize, yOffset+buttonHeight+j*entityButtonSize);
    }
}

// Tooltip
/*
if (tooltipIdx &gt;= 0) {
    if (is_string(entityButtons[tooltipIdx, TOOLTIP])) {
        var x2, y2;
        if (mouse_x-view_xview[0]+string_width(entityButtons[tooltipIdx, TOOLTIP])+14 &gt; view_wview[0]) x2 = mouse_x - string_width(entityButtons[tooltipIdx, TOOLTIP]) - 12;
        else x2 = mouse_x+12;
        y2 = round(mouse_y-string_height(entityButtons[tooltipIdx, TOOLTIP])/2);    // round to prevent gm from squishing the text
        draw_rectangle(x2-2, y2-2, x2+string_width(entityButtons[tooltipIdx, TOOLTIP])+2, y2+string_height(entityButtons[tooltipIdx, TOOLTIP])+2, false);
        draw_set_color(c_white);
        draw_text(x2, y2, entityButtons[tooltipIdx, TOOLTIP]);
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
