<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>GhostIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>origX = x;
origY = y;

newX = 0;
newY = 0;

steps = 0;
lastKiss = -30;

owner = -1;

image_speed = 1/3;
fadeAlpha = 0;

hitBoundaryOnLastStep = false;

nextMoveTicker = 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>steps += 1;

// Die and fly towards owner
if (owner.object != -1) {
    sprite_index = GhostDeath;
    move_towards_point(owner.object.x, owner.object.y, 10);
// Chase other players but don't stray far from corpse's position
} else {
    var hitBoundary;
    hitBoundary = false;

    if (sprite_index == GhostDeath)
    {
        sprite_index = GhostIdle;
        image_speed = 1/3;
    }

    // Cap distance from corpse
    if (point_distance(origX, origY, x, y) &gt; 128)
    {
        var dir;
        dir = point_direction(origX, origY, x, y);
        x = origX + lengthdir_x(128, dir);
        y = origY + lengthdir_y(128, dir);
        hitBoundary = true;
    }

    // Play animations depending on whether we've hit or not hit boundary
    if (hitBoundary and !hitBoundaryOnLastStep and steps - lastKiss &gt; 90)
    {
        sprite_index = GhostKiss;
        lastKiss = steps;
    }
    if (!hitBoundary and hitBoundaryOnLastStep and steps - lastKiss &gt; 90)
    {
        sprite_index = GhostFlex;
        lastKiss = steps;
    }
    hitBoundaryOnLastStep = hitBoundary;

    // Find closest character
    var closest, closestDist;
    closest = -1;
    closestDist = -1;
    with (Character) {
        var dist;
        dist = point_distance(x, y, other.origX, other.origY);
        if (dist &lt; closestDist or closestDist == -1)
        {
            if (!cloak)
            {
                closest = id;
                closestDist = dist;
            }
        }
    }

    // Stalk them
    if (closest != -1)
    {
        move_towards_point(closest.x, closest.y, 5);
    }
    // Random movement
    else
    {
        nextMoveTicker -= 1;
        if (nextMoveTicker &lt;= 0)
        {
            var randDir;
            randDir = random(360);
            motion_add(randDir, 5);
            nextMoveTicker = irandom(90);
        }
    }
}

// "Friction"
speed = min(speed / 1.125, 15);

// Fade in effect
if (fadeAlpha &lt; 1)
    fadeAlpha += 0.05;

// Face left/right depending on movement
image_xscale = sign(hspeed);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.player == owner)
{
    owner.ghost = noone;
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == GhostDeath)
    image_speed = 0;
else
    sprite_index = GhostIdle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, min(1, fadeAlpha / 2));

if (distance_to_point(mouse_x, mouse_y) &lt; 25)
{
    draw_set_alpha(0.5);
    draw_set_halign(fa_center);
    draw_set_valign(fa_bottom);
    if (sprite_index == GhostDeath)
        draw_set_color(c_black);
    else
        draw_set_color(c_white);
    draw_text(round(x), round(y) - 35, 'Ghost of ' + sanitiseNewlines(owner.name));
}  


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
