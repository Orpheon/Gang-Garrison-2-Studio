<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>SpyRedBackstabTorsoS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alpha = 0.01;
done = false;
hitDamage = 0;
image_speed = 0;
alarm[0] = 10 / global.delta_factor;
overlays = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Don't re-allow movement if there's another StabAnim running for the same player
with(StabAnim)
    if(id != other.id and owner == other.owner)
        exit;

ds_list_destroy(overlays);
        
owner.runPower = owner.baseRunPower;
owner.jumpStrength = owner.baseJumpStrength;
owner.stabbing = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 1 * global.delta_factor;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Make self invisible if behind enemy
visible = !owner.invisible;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (direction &gt;= 90 and direction &lt;= 270)
    image_xscale = -1;
else
    image_xscale = 1;

if(golden)
{
    if (team == TEAM_RED)
        sprite_index = SpyRedBackstabTorsoGoldS;
    else
        sprite_index = SpyBlueBackstabTorsoGoldS;
}
else
{
    if (team == TEAM_RED)
        sprite_index = SpyRedBackstabTorsoS;
    else
        sprite_index = SpyBlueBackstabTorsoS;
}
    
if (image_index == 32)
{
    done = 1;
    image_speed = 0;
}

if(!done)
    if(alpha &lt; 1)
        alpha += 0.1 * global.delta_factor;
    else
        alpha = 1;
else
{
    if(alpha &gt; 0)
        alpha -= 0.1 * global.delta_factor;
    else
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(owner.invisible)
    exit;

x = owner.x;
y = owner.y;

if team == TEAM_RED ubercolour = c_red;
if team == TEAM_BLUE ubercolour = c_blue;
draw_sprite_ext_overlay(sprite_index,overlays,owner.gearList,image_index,owner.x,owner.y,image_xscale,image_yscale,0,c_white,alpha);

var offset;
if !place_meeting(owner.x,owner.y+1,Obstacle)
    and!place_meeting(owner.x,owner.y+1,PlayerWallHorizontal)
    offset = 2;
else
    offset = 0;

draw_sprite_ext(BackstabLegsS, owner.team+offset,owner.x, owner.y,image_xscale,image_yscale,0,c_white,alpha);

if (owner.ubered)
{
    draw_sprite_ext_overlay(sprite_index,overlays,owner.gearList,image_index,owner.x,owner.y,image_xscale,image_yscale,image_angle,ubercolour,1);
    draw_sprite_ext(BackstabLegsS, owner.team+offset,owner.x,owner.y,image_xscale,image_yscale,0,ubercolour,0.7);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
