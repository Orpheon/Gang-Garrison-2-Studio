<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>GibS</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = choose(0,1,2,3,4,5,6);
image_xscale=2;
image_yscale=2;
bloodchance=1.8;
snd=true;
hfric=0.4;
rotfric=0.6;
direction = 270;
alarm[0]=210/global.delta_factor;
rotspeed=1;
fadeout = false;
vis_angle = 0;
air_friction = power(0.97, global.delta_factor);
my_gravity = 0.7 * global.delta_factor;
bloodiness = 50;
maxBloodiness = bloodiness;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadeout = true;
alarm[1] = 20 / global.delta_factor;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Needle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (random(25) &lt; 2)
{
    hspeed += 1.1*other.hspeed * global.delta_factor;
    vspeed += 0.9*other.vspeed * global.delta_factor;
    rotspeed = other.hspeed*-0.2*random(51) * global.delta_factor;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Shot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (random(20)&lt;2)
{
    hspeed += 1.7*other.hspeed * global.delta_factor;
    vspeed -= 1.2*other.vspeed * global.delta_factor;
    rotspeed = other.hspeed*-0.6*random(71) * global.delta_factor;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Character">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if((abs(other.hspeed)&gt;3) and (random(9)&lt;2) and (other.cloakAlpha != 0))
{
    hspeed += other.hspeed * 1.2 * global.delta_factor;
    vspeed -= 2.7 * global.delta_factor;
    rotspeed = rotspeed + other.hspeed*0.8*(random(147)-73) * global.delta_factor;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hspeed *= hfric;
rotspeed *= rotfric;

if(speed &gt; 4 and vspeed &gt; 2 and snd and global.run_virtual_ticks)
{
    playsound(x,y,Splat);
    repeat(9)
    if(abs(speed/bloodchance)
        * (bloodiness/maxBloodiness*0.5 + 0.5)
       &gt; random(3))
    {
        var blood;
        blood = instance_create(x,y-1,BloodDrop);
        blood.ogib = self;
        blood.odir = point_direction(x,y,x+hspeed,y+vspeed);
        if (object_index == PumpkinGib)
            blood.sprite_index = PumpkinJuiceS;
        
        bloodiness += 1;
        
        with(blood)
        {
            motion_add(odir, ogib.speed*-0.8);
            hspeed += random(8)-3.5;
            vspeed -= random(6)-2;
        }
    }
}

really_move_contact_solid(point_direction(x,y,x+hspeed,y+vspeed), speed);

if(!place_free(x,y+sign(vspeed)))
{
    vspeed *= -0.4;
    if(!place_free(x+hspeed,y))
    {
        really_move_contact_solid(point_direction(x,y,x+hspeed,y+vspeed), speed);
        hspeed *= -0.4;
    }
}
if(!place_free(x+sign(hspeed),y))
{
    hspeed *= -0.4;
    if(!place_free(x,y+vspeed))
    {
        really_move_contact_solid(point_direction(x,y,x+hspeed,y+vspeed), speed);
        vspeed *= -0.4;
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, vis_angle, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
