<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-110000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>kills = ds_list_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(kills);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ds_list_size(kills)) {
    ds_map_destroy(ds_list_find_value(kills, 0));
    ds_list_delete(kills, 0);
    
    alarm[0] = 30*5 / global.delta_factor;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, map, n1, t1, w1, n2, t2, in, str, color,yoffset;

if (global.kothHudPos)
    yoffset = 65*global.killLogPos;
else
    yoffset = 45*global.killLogPos;

draw_set_halign(fa_left);
draw_set_valign(fa_center);

for (i = 0; i &lt; ds_list_size(kills); i += 1) {
    map = ds_list_find_value(kills, i);
    n1 = sanitiseNewlines(ds_map_find_value(map, "name1")); // Name of the Player who killed
    t1 = ds_map_find_value(map, "team1"); // Their team
    w1 = ds_map_find_value(map, "weapon"); // Their weapon sprite
    n2 = sanitiseNewlines(ds_map_find_value(map, "name2")); // Name of the Player who died
    t2 = ds_map_find_value(map, "team2"); // Their team
    in = ds_map_find_value(map, "inthis"); // Am I involved in this event?
    str = sanitiseNewlines(ds_map_find_value(map, "string")); // Special text: Finish off, bid farewell, domination, revenge
    
    draw_set_alpha(1);
    if (in)
       color = make_color_rgb(217,217,183);
    else color = make_color_rgb(49,45,26);

    draw_rectangle_color(view_xview[0] + view_wview[0] - string_width(n1 + n2 + str) - 12 - sprite_get_width(w1), view_yview[0] + i * 20 + 14 + yoffset,
        view_xview[0] + view_wview[0] - 8, view_yview[0] + i * 20 + 24 + 8 + yoffset, color, color, color, color, 0);
    draw_rectangle_color(view_xview[0] + view_wview[0] - string_width(n1 + n2 + str) - 14 - sprite_get_width(w1), view_yview[0] + i * 20 + 16 + yoffset,
        view_xview[0] + view_wview[0] - 6, view_yview[0] + i * 20 + 24 + 6+ yoffset, color, color, color, color, 0);
    
    if (t1 == TEAM_RED) {
        draw_set_color(make_color_rgb(171, 78, 70));
    } else if (t1 == TEAM_BLUE) {
        draw_set_color(make_color_rgb(100, 116, 132));
    } else {
        draw_set_color(c_white);
    }
    draw_text(view_xview[0] + view_wview[0] - string_width(n1 + n2 + str) - 12 - sprite_get_width(w1), view_yview[0] + i * 20 + 24 + yoffset, n1);
    draw_set_halign(fa_left);
    if (w1 != -1) {
        draw_sprite(w1, in, floor(view_xview[0] + view_wview[0] - string_width(n2 + str) - 10 - sprite_get_width(w1)/2 /*- sprite_get_xoffset(w1)*/), floor(view_yview[0] + i * 20 + 24 + yoffset));
    }
    
    if (in)
        draw_set_color(c_black);
    else draw_set_color(c_white);
    draw_text(view_xview[0] + view_wview[0] - string_width(n2 + str) - 8, view_yview[0] + i * 20 + 24+ yoffset, str);
    draw_set_halign(fa_left);
    
    if (t2 == TEAM_RED) {
        draw_set_color(make_color_rgb(171, 78, 70));
    } else if (t2 == TEAM_BLUE){
        draw_set_color(make_color_rgb(100, 116, 132));
    } else {
        draw_set_color(c_white);
    }
    draw_text(view_xview[0] + view_wview[0] - string_width(n2) - 8, view_yview[0] + i * 20 + 24 + yoffset, n2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
